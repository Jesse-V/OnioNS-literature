% Be sure to write chapter titles in ALL CAPS
\chapter{\uppercase{DISCUSSION}}
\thispagestyle{empty}

\section{Objectives}

A high degree of anonymity, privacy, and security are of paramount importance for all Tor users. This context makes the inclusion of additional capabilities challenging. To meet these challenges and to remain acceptably resistant to attack, any proposed DNS system for Tor hidden services must meet at least the following requirements: %Tor is a high-anonymity, high-privacy, censorship-resistance tool. 

\begin{enumerate}
	\item The registrations must be anonymous. It should be infeasible to identify the registrant from the registration, including over the wire.
	\item Lookups must be anonymous. Clients must stay anonymous when looking up registrations, otherwise they leak what hidden services they are after.
	\item Registrations must be publicly confirmable. Akin to SSL certificates on the clearnet, clients must be able to verify that the registration matches and came from the service they are after, and is not a forgery.
	\item It must be distributed. The Tor community will adamantly reject any centralized solution for Tor hidden services, as they have in the past for other proposals.
	\item It must remain simple to use. Most Tor users are not security experts and Tor puts almost all cryptographic details and routing details behind the scenes.
	\item It must remain backwards compatible. The existing Tor hidden service infrastructure must still remain functional.
	\item It should not be possible to maliciously modify or falsify registrations in the database or in transit, even if a machine under their control answers the request for a registration.
\end{enumerate}

There are a couple of works in the literature regarding a DNS system for Tor, neither of which fully solve all of these problems.

\section{Solutions Analysis}

1. Hidden services sign registration, upload using Tor to blockchain. Upload IP node so it can be contacted directly. Fully completes triangle.
2. 1 except clients using Tor download blockchain, find info they are after.
3. 2 except clients query Tor nodes for block, use it.
4. 3 except clients contain hashes/nonces that can be used to verify each block. Nodes also return onion as well to improve efficiency ahead of block download.

\section{Conclusion}

4 is best overall, 1 still possible as option.